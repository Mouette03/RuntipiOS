name: Build and Release RuntipiOS

on:
  push:
    tags:
      - 'v*' # Se déclenche quand un tag de version est poussé (ex: v1.0.0)
  workflow_dispatch:
    inputs:
      version:
        description: 'Optional version override (default: dev build)'
        required: false
        default: ''

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Nécessaire pour créer et mettre à jour les releases

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: 📝 Extract Version and Config
        id: metadata
        run: |
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            VERSION=${{ github.ref_name }}
          elif [[ -n "${{ github.event.inputs.version }}" ]]; then
            VERSION=${{ github.event.inputs.version }}
          else
            VERSION="dev-$(date +%Y%m%d)"
          fi
          echo "VERSION=${VERSION#v}" >> $GITHUB_OUTPUT
          echo "Version determined: ${VERSION#v}"

          COMPRESSION_FORMAT=$(yq '.build.compression_format' config.yml | tr -d '"')
          [ -z "$COMPRESSION_FORMAT" ] && COMPRESSION_FORMAT="xz"
          echo "COMPRESSION_FORMAT=$COMPRESSION_FORMAT" >> $GITHUB_OUTPUT
          echo "Compression format: $COMPRESSION_FORMAT"

      - name: 🧹 Free up disk space
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo docker image prune -a -f
          df -h

      - name: ⚙️ Set up QEMU for ARM cross-compilation
        uses: docker/setup-qemu-action@v3

      - name: 🏗️ Build RuntipiOS Image
        run: |
          echo "Building the builder image..."
          docker build -t runtipios-builder .

          echo "Starting the RuntipiOS image build process..."
          mkdir -p output
          
          docker run --rm --privileged \
            -e OUTPUT_NAME="RuntipiOS-${{ steps.metadata.outputs.VERSION }}" \
            -v $(pwd)/config.yml:/build/config.yml:ro \
            -v $(pwd)/scripts:/build/scripts:ro \
            -v $(pwd)/output:/build/output \
            runtipios-builder \
            /build/scripts/build-image.sh

      - name: 📦 Verify and Prepare Artifacts
        run: |
          echo "Verifying created image..."
          ls -lh output/
          if ! ls output/*.img.* 1> /dev/null 2>&1; then
            echo "❌ ERROR: No compressed image found!"
            exit 1
          fi
          
          echo "Generating checksums..."
          cd output
          sha256sum * > SHA256SUMS
          cat SHA256SUMS

      - name: 🚀 Create GitHub Release and Upload Assets
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: RuntipiOS ${{ github.ref_name }}
          body: |
            ## 🚀 RuntipiOS ${{ github.ref_name }}
            
            Optimized Raspberry Pi OS image for Runtipi with automatic WiFi setup via smartphone.
            
            ### 🔧 Installation
            1. Download the `.img.${{ steps.metadata.outputs.COMPRESSION_FORMAT }}` file below.
            2. Flash it to a microSD card (16GB recommended) using [Raspberry Pi Imager](https://www.raspberrypi.com/software/).
            3. Boot your Raspberry Pi (with Ethernet plugged in, or not).
            4. If no Ethernet, connect to the "RuntipiOS-Setup" WiFi with your phone.
            5. The captive portal will guide you to connect to your home WiFi.
            6. After reboot, Runtipi will install automatically.
            7. Access Runtipi at `http://runtipios.local`.
            
            ### 📊 Checksums
            Verify the integrity of the downloaded image using the `SHA256SUMS` file.
          files: |
            output/*.img.*
            output/SHA256SUMS
